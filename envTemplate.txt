NODE_ENV=development # development | production
SECURE=false # when NODE_ENV is production and this is true we use https else http, make sure your nginx server is configured to use https if this is set to true

FRONTEND_URL=http://localhost:5173 # used for development, production we serve the files from the server itself and not a via vite
SERVER_IP=localhost # used for development and testing oauth providers cause they only work on valid domains and localhost is a valid domain
SERVER_PORT=80 # 80 for localhost and for production any port you like

DNS=localhost # the dns record used for the server when in production

REDIS_HOST=127.0.0.1
REDIS_PORT=6379

#here you can add urls that are allowed to communicate with the server, such as oauth urls
#when adding new urls make sure to saperate them with a ',' and at the end of the url you sometimes need to add the '/' to make it work 
EXTERNAL_ORIGINS=https://accounts.google.com/,https://github.com/,https://www.facebook.com/,https://discord.com/,https://yourDomain.nl,subdomain.yourDomain.nl

#https://console.cloud.google.com/apis/credentials
# create a new project, go to credentials, create OAuth clientId
# scroll down to Authorized redirect URIs and add the server ip port and than /auth/callback/google
# so for dev it should be http://localhost:80/auth/callback/google
# copy the google client id and secret.
GOOGLE_CLIENT_ID=xxxxxxx
GOOGLE_CLIENT_SECRET=xxxxxxx

#https://github.com/settings/developers
# create a new OAuth app, homepage url can be http://localhost:80/auth/callback/github
# callback url should be ip port and than /auth/callback/github, so for dev it should be http://localhost:80/auth/callback/github
# than just copy the client id and secret
GITHUB_CLIENT_ID=xxxxxxx
GITHUB_CLIENT_SECRET=xxxxxxx

#https://developers.facebook.com/async/registration/dialog/?src=default
# go to my apps and it want you to create an account, after creating an account you should be able to create a new app
# go to use cases and click customize on 'authenticate and request data from users with facebook login' and then click on quickstart
# after quick setup go to apps ettings - basics and copy the app id and app secret, the callback url for localhost is automaticly handeld but for production you need to change this
# you can change this on use cases and click on 'authenticate and request data from users with facebook login' and then click on 'settings' and go down to valid oauth redirect urls
FACEBOOK_CLIENT_ID=xxxxxxx
FACEBOOK_CLIENT_SECRET=xxxxxxx

#https://discord.com/developers/applications
# create a new application, navigate to OAuth2, copy the client id and secret
# add a redirects url, for dev it should be http://localhost:80/auth/callback/discord
DISCORD_CLIENT_ID=xxxxxxx
DISCORD_CLIENT_SECRET=xxxxxxx

# https://www.linkedin.com/developers/apps/new
# requires you to have an company page wich requires id verification
# LINKEDIN_CLIENT_ID=aaaaaaaaaaa
# LINKEDIN_CLIENT_SECRET=aaaaaaaaaaa

# requires a $99 subscription to create a App id
# APPLE_CLIENT_ID=a
# APPLE_CLIENT_SECRET=a

# only supports businness accounts so you can add it yourself if you want but not worth my time right now
# INSTAGRAM_CLIENT_ID=a
# INSTAGRAM_CLIENT_SECRET=a

# currently switching from twitter to X and no clear documentation in my opinion 
# X_CLIENT_ID=a
# X_CLIENT_SECRET=a

#node -e "console.log(require('crypto').randomBytes(96).toString('base64'))"
# paste the result in the JWT_SECRET
JWT_SECRET=xxxxxxx

# DATABASE_URL="provider://user:password@host:port/database"
# example: DATABASE_URL="mysql://root:@localhost:3306/test"